<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- ======================导入配置文件  读取 配置文件 -->
	<!-- 导入shiro -->
	 <import resource="shiro.xml"/>  
	<!-- 导入工作流 安词tiviti 配置文件 -->
	 <import resource="activiti.cfg.xml"/> 
	
	<!-- 读取文件 PROPERTIES配置文件-->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<!-- 扫描注解包 -->
	<context:component-scan base-package="cn"></context:component-scan> 
	
	<!-- ======================配置数据源=============================================== -->
	
	<!-- 配置数据源 -->
	
	<bean id="dataSourse" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${url}"></property>
		<property name="driverClass" value="${driver}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
    </bean>
    
	 <!-- 配置mybaits的属性以及核心  -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!--    核心 配置 读取文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:cn/huarun/decoration/mcb/mapper/*.xml"></property>
		<!-- <property name="typeAliasesPackage" value="com.bdqn.ssm.pojo"></property> -->
		<property name="dataSource" ref="dataSourse"></property>
	</bean>
	
  <!--   配置mapper接口转换   扫描接口生成代理对象proxy -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.huarun.decoration.mcb.dao"></property>
		<property name="beanName" value="sqlSessionFactoryBean"></property>
	</bean>
	<!-- ======================================事务配置=============================================== -->
	
	<!-- 定义事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 下面使用aop切面的方式来实现 -->
	<tx:advice id="TestAdvice" transaction-manager="transactionManager">
		<!--配置事务传播性，隔离级别以及超时回滚等问题 -->
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
       <!--  配置事务切入点 切service 实现类的所有方法 --> 
        <aop:config>
            <aop:pointcut expression="execution(* cn.huarun.decoration.mcb.service.dao.impl.*.*(..))" id="pointCut"/>
            <aop:advisor advice-ref="TestAdvice" pointcut-ref="pointCut"/> 
        </aop:config> 
	
	<!-- ======================================缓存=============================================== -->
	
	<!-- 配置缓存类 -->
	<!-- 设置缓存 redis对 象  通过构造赋值 -->
	<bean id="jedis" class="redis.clients.jedis.Jedis">
	    
	    <constructor-arg name="host"  value="127.0.0.1"></constructor-arg>
	    <constructor-arg name="port"  value="6379"></constructor-arg>
	    
	</bean>
	
	
</beans>
